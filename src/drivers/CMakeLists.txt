SET (DRIVER_LIBRARY_TYPE SHARED)

IF (DRIVER_LIBRARY_TYPE STREQUAL "SHARED")
  ADD_DEFINITIONS (-DSP_DRIVER_LIBRARY)
ENDIF(DRIVER_LIBRARY_TYPE STREQUAL "SHARED")

# ODBC support library
IF (ODBC_FLAG)
    ADD_LIBRARY (spdb5_odbc ${DRIVER_LIBRARY_TYPE} odbc/CODBC.cpp odbc/CODBCConnection.cpp)
    TARGET_LINK_LIBRARIES(spdb5_odbc spdb5 sputil5 ${ODBC_LIBRARY})
    INSTALL(TARGETS spdb5_odbc RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (ODBC_FLAG)

# SQLite3 support library
SET (SQLITE3_SOURCES)
IF (SQLITE3_FLAG)
    ADD_LIBRARY (spdb5_sqlite3 ${DRIVER_LIBRARY_TYPE} SQLite3/CSQLite3Connection.cpp)
    TARGET_LINK_LIBRARIES(spdb5_sqlite3 spdb5 sputil5 sqlite3)
    INSTALL(TARGETS spdb5_sqlite3 RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (SQLITE3_FLAG)

SET (POSTGRESQL_SOURCES)
IF (POSTGRESQL_FLAG)
    ADD_LIBRARY (spdb5_postgresql ${DRIVER_LIBRARY_TYPE}
        PostgreSQL/CPostgreSQLConnection.cpp
        PostgreSQL/CPostgreSQLParamValues.cpp
        PostgreSQL/htonq.cpp
    )
    INCLUDE_DIRECTORIES (${PostgreSQL_INCLUDE_DIR})
    TARGET_LINK_LIBRARIES(spdb5_postgresql spdb5 sputil5 ${PostgreSQL_LIBRARY})
    INSTALL(TARGETS spdb5_postgresql RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (POSTGRESQL_FLAG)

IF (ORACLE_FLAG)
    ADD_LIBRARY (spdb5_oracle ${DRIVER_LIBRARY_TYPE}
        Oracle/COracleEnvironment.cpp
        Oracle/COracleStatement.cpp
        Oracle/COracleConnection.cpp
        Oracle/COracleBulkInsertQuery.cpp
    )
    TARGET_LINK_LIBRARIES (spdb5_oracle spdb5 sputil5 ${Oracle_LIBRARIES})
    INSTALL(TARGETS spdb5_oracle RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (ORACLE_FLAG)

IF (MYSQL_FLAG)
    ADD_LIBRARY (spdb5_mysql ${DRIVER_LIBRARY_TYPE}
        MySQL/CMySQLStatement.cpp
        MySQL/CMySQLConnection.cpp
    )
    INCLUDE_DIRECTORIES (${MySQL_INCLUDE_DIR})
    TARGET_LINK_LIBRARIES (spdb5_mysql spdb5 sputil5 ${MySQL_LIBRARY})
    INSTALL(TARGETS spdb5_mysql RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (MYSQL_FLAG)

IF (FIREBIRD_FLAG)
    ADD_LIBRARY (spdb5_firebird ${LIBRARY_TYPE}
        Firebird/FirebirdConnection.cpp
        Firebird/FirebirdStatement.cpp
    )
    INCLUDE_DIRECTORIES (${Firebird_INCLUDE_DIR})
    TARGET_LINK_LIBRARIES (spdb5_firebird spdb5 sputil5 ${Firebird_LIBRARY})
    INSTALL(TARGETS spdb5_firebird RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (FIREBIRD_FLAG)
