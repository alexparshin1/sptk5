IF (LIBRARY_TYPE STREQUAL "SHARED")
  ADD_DEFINITIONS (-DSP_DRIVER_LIBRARY)
ENDIF(LIBRARY_TYPE STREQUAL "SHARED")

# ODBC support library
IF (ODBC_FLAG)
    ADD_LIBRARY (spdb5_odbc ${LIBRARY_TYPE} odbc/CODBC.cpp odbc/CODBCConnection.cpp)
    TARGET_LINK_LIBRARIES(spdb5_odbc spdb5 sputil5 ${ODBC_LIBRARY})
    INSTALL(TARGETS spdb5_odbc RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (ODBC_FLAG)

# SQLite3 support library
SET (SQLITE3_SOURCES)
IF (SQLITE3_FLAG)
    ADD_LIBRARY (spdb5_sqlite3 ${LIBRARY_TYPE} SQLite3/CSQLite3Connection.cpp)
    TARGET_LINK_LIBRARIES(spdb5_sqlite3 spdb5 sputil5)
    INSTALL(TARGETS spdb5_sqlite3 RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (SQLITE3_FLAG)

SET (POSTGRESQL_SOURCES)
IF (POSTGRESQL_FLAG)
    ADD_LIBRARY (spdb5_postgresql ${LIBRARY_TYPE}
        PostgreSQL/CPostgreSQLConnection.cpp
        PostgreSQL/CPostgreSQLParamValues.cpp
        PostgreSQL/htonq.cpp
    )
    TARGET_LINK_LIBRARIES(spdb5_postgresql ${POSTGRESQL_LIBRARY})
    INSTALL(TARGETS spdb5_postgresql RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (POSTGRESQL_FLAG)

IF (ORACLE_FLAG)
    ADD_LIBRARY (spdb5_oracle ${LIBRARY_TYPE}
        Oracle/COracleEnvironment.cpp
        Oracle/COracleStatement.cpp
        Oracle/COracleConnection.cpp
    )
    TARGET_LINK_LIBRARIES (spdb5_oracle ${Oracle_LIBRARIES})
    INSTALL(TARGETS spdb5_oracle RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (ORACLE_FLAG)

IF (MYSQL_FLAG)
    ADD_LIBRARY (spdb5_mysql ${LIBRARY_TYPE}
        MySQL/CMySQLStatement.cpp
        MySQL/CMySQLConnection.cpp
    )
    INCLUDE_DIRECTORIES (${MySQL_INCLUDE_DIR})
    TARGET_LINK_LIBRARIES (spdb5_mysql ${MySQL_LIBRARY})
    INSTALL(TARGETS spdb5_mysql RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
ENDIF (MYSQL_FLAG)
